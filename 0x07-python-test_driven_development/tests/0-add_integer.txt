>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(7, 3)
10
>>> add_integer(7, 3.5)
10
>>> add_integer(7, "string")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 20, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer
>>> add_integer("abc", 7)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 18, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer(None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 18, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer(3, 5, 7)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
>>> add_integer(None, 7)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/holbertonschool-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 18, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer(14 + 9, 7)
30
>>> add_integer(0, 0)
0
