""" Tests for verifying that 1-my_list.py works as planned """

>>> MyList = __import__('1-my_list').MyList

""" Tests with incorrect input """
>>> MyList.print_sorted(1, 2)
Traceback (most recent call last):
TypeError: print_sorted() takes 1 positional argument but 2 were given

>>> MyList.print_sorted([2, 3, 7, 1], [6, 7, -9, 5])
Traceback (most recent call last):
TypeError: print_sorted() takes 1 positional argument but 2 were given

>>> MyList.print_sorted(None)
Traceback (most recent call last):
TypeError: 'NoneType' object is not iterable

>>> MyList.print_sorted()
Traceback (most recent call last):
TypeError: print_sorted() missing 1 required positional argument: 'self'

>>> MyList.print_sorted([int("a")])
Traceback (most recent call last):
ValueError: invalid literal for int() with base 10: 'a'

""" Tests with proper lists to sort - Note: only """
>>> MyList.print_sorted([1, 2, 3, 4, 5])
[1, 2, 3, 4, 5]

>>> MyList.print_sorted([5, 4, 3, 2, 1])
[1, 2, 3, 4, 5]

>>> MyList.print_sorted([5, 9, -3, 0, -8])
[-8, -3, 0, 5, 9]

>>> MyList.print_sorted([3, 7, 12, 1, 9999999999999999])
[1, 3, 7, 12, 9999999999999999]

>>> MyList.print_sorted([10])
[10]

>>> MyList.print_sorted([])
[]

>>> MyList.print_sorted([int(3.5), 7, 4, 0, -6])
[-6, 0, 3, 4, 7]
